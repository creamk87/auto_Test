- module_name: SQL 连接查询使用
  module_case_name: CROSS_JOIN连接生成两张表的笛卡尔积
  name_id: dwrun_sql_019_dikaer
  isInitialized: 1
  isCheckHeader: 0
  sqltype: plsql
  tb_name:
    tb_name1: emp
    tb_name2: dept
  exec_order:
    - sql
  exec_sql:
    # CROSS JOIN连接,生成两张表的笛卡尔积
    sql: f"select d.dname,e.ename from {tb_name2} d CROSS JOIN {tb_name1} e;"
  expected_result:
    data: [["SMITH","800","CLERK"],["SMITH","800.5","CLERK"],["SMITH","800","CLERK"],["JONES2","2975.3","MANAGER"],["BLAKE","2850","MANAGER"],["CLARK","2450.5","MANAGER"],["JAMES","950","CLERK"],["MILLER","1300","CLERK"]]
    header:

- module_name: SQL 连接查询使用
  module_case_name: 不等连接
  name_id: dwrun_sql_020
  isInitialized: 0
  isCheckHeader: 0
  sqltype: plsql
  tb_name:
    tb_name1: emp
    tb_name2: dept
  exec_order:
    - sql
  exec_sql:
    # where中使用IS NULL操作符
    sql: f"SELECT  b.deptno, b.dname, SUM(a.deptno) s_sum FROM {tb_name2} a , {tb_name2} b WHERE a.deptno <= b.deptno GROUP BY b.deptno,b.dname HAVING SUM(a.deptno)<100 ORDER BY b.deptno DESC;"
  expected_result:
    data: [["30","SALES","60"],["20","RESEARCH","30"],["10","ACCOUNTING","10"]]
    header:

- module_name: SQL 连接查询使用
  module_case_name: 建立NATURAL_JOIN连接，基于同名列执行相等连接_01
  name_id: dwrun_sql_021_natural_join_01
  isInitialized: 0
  isCheckHeader: 0
  sqltype: plsql
  tb_name:
    tb_name1: emp
    tb_name2: dept
  exec_order:
    - sql
  exec_sql:
    # 建立NATURAL_JOIN连接，基于同名列执行相等连接
    sql: f"select e.ename,e.sal,d.dname from {tb_name2} d NATURAL JOIN {tb_name1} e;"
  expected_result:
    data: [["MILLER","1300","ACCOUNTING"],["KING","5000.6","ACCOUNTING"],["CLARK","2450.5","ACCOUNTING"],["FORD","3000","RESEARCH"],["SCOTT1","3000","RESEARCH"],["JONES2","2975.3","RESEARCH"],["SMITH","800","RESEARCH"],["SMITH","800.5","RESEARCH"],["SMITH","800","RESEARCH"],["JAMES","950","SALES"],["TURNER","1500","SALES"],["BLAKE","2850","SALES"],["MARTIN","1250","SALES"],["WARD","1250","SALES"],["ALLEN","1600","SALES"],["ALLEN","1600.6","SALES"]]
    header:

- module_name: SQL 连接查询使用
  module_case_name: 建立NATURAL_JOIN连接，基于同名列执行相等连接_02
  name_id: dwrun_sql_021_natural_join_02
  isInitialized: 0
  isCheckHeader: 0
  sqltype: plsql
  tb_name:
    tb_name1: emp
    tb_name2: dept
  exec_order:
    - sql
  exec_sql:
    # 建立NATURAL_JOIN连接，基于同名列执行相等连接
    sql: f"select e.ename,e.sal,d.dname from {tb_name2} d ,{tb_name1} e where e.deptno=d.deptno;"
  expected_result:
    data: [["MILLER","1300","ACCOUNTING"],["KING","5000.6","ACCOUNTING"],["CLARK","2450.5","ACCOUNTING"],["FORD","3000","RESEARCH"],["SCOTT1","3000","RESEARCH"],["JONES2","2975.3","RESEARCH"],["SMITH","800","RESEARCH"],["SMITH","800.5","RESEARCH"],["SMITH","800","RESEARCH"],["JAMES","950","SALES"],["TURNER","1500","SALES"],["BLAKE","2850","SALES"],["MARTIN","1250","SALES"],["WARD","1250","SALES"],["ALLEN","1600","SALES"],["ALLEN","1600.6","SALES"]]
    header:


- module_name: SQL 连接查询使用
  module_case_name: 连接查询中使用AND指定其它条件
  name_id: dwrun_sql_022_where_and
  isInitialized: 0
  isCheckHeader: 0
  sqltype: plsql
  tb_name:
    tb_name1: emp
    tb_name2: dept
  exec_order:
    - sql
  exec_sql:
    # 连接查询中使用AND指定其它条件
    sql: f"select {tb_name1}.ename,{tb_name1}.sal,{tb_name2}.dname,{tb_name2}.deptno from {tb_name1},{tb_name2} where {tb_name1}.deptno={tb_name2}.deptno AND {tb_name2}.deptno=10;"
  expected_result:
    data: [["CLARK","2450.5","ACCOUNTING","10"],["KING","5000.6","ACCOUNTING","10"],["MILLER","1300","ACCOUNTING","10"]]
    header:

- module_name: SQL 连接查询使用
  module_case_name: 使用ON子句建立连接，连接列名称不同时
  name_id: dwrun_sql_022_join_on
  isInitialized: 0
  isCheckHeader: 0
  sqltype: plsql
  tb_name:
    tb_name1: emp
    tb_name2: dept
  exec_order:
    - sql
  exec_sql:
    # 使用ON子句建立连接，连接列名称不同时
    sql: f"select e.ename,e.sal,d.dname,e.deptno from {tb_name1} e JOIN {tb_name2} d ON e.deptno=d.deptno AND e.deptno=10;"
  expected_result:
    data: [["CLARK","2450.5","ACCOUNTING","10"],["KING","5000.6","ACCOUNTING","10"],["MILLER","1300","ACCOUNTING","10"]]
    header:

- module_name: SQL 连接查询使用
  module_case_name: 使用using子句建立相等连接
  name_id: dwrun_sql_024_join_using
  isInitialized: 0
  isCheckHeader: 0
  sqltype: plsql
  tb_name:
    tb_name1: emp
    tb_name2: dept
  exec_order:
    - sql
  exec_sql:
    # 使用using子句建立相等连接
    sql: f"select e.ename,e.sal,d.dname from {tb_name2} d JOIN {tb_name1} e USING(deptno);"
  expected_result:
    data: [["MILLER","1300","ACCOUNTING"],["KING","5000.6","ACCOUNTING"],["CLARK","2450.5","ACCOUNTING"],["FORD","3000","RESEARCH"],["SCOTT1","3000","RESEARCH"],["JONES2","2975.3","RESEARCH"],["SMITH","800","RESEARCH"],["SMITH","800.5","RESEARCH"],["SMITH","800","RESEARCH"],["JAMES","950","SALES"],["TURNER","1500","SALES"],["BLAKE","2850","SALES"],["MARTIN","1250","SALES"],["WARD","1250","SALES"],["ALLEN","1600","SALES"],["ALLEN","1600.6","SALES"]]
    header:

- module_name: SQL 连接查询使用
  module_case_name: 完全连接
  name_id: dwrun_sql_025_full_join
  isInitialized: 0
  isCheckHeader: 0
  sqltype: plsql
  tb_name:
    tb_name1: emp
    tb_name2: dept
  exec_order:
    - sql
  exec_sql:
    # 完全连接
    sql: f"select a.dname,b.ename from {tb_name2} a FULL JOIN {tb_name1} b ON a.deptno=b.deptno AND a.deptno=10;"
  expected_result:
    data: [["ACCOUNTING","CLARK"],["ACCOUNTING","KING"],["ACCOUNTING","MILLER"],["SALES",""],["","ALLEN"],["","ALLEN"],["","WARD"],["","MARTIN"],["","BLAKE"],["","TURNER"],["","JAMES"],["RESEARCH",""],["","SMITH"],["","SMITH"],["","SMITH"],["","JONES2"],["","SCOTT1"],["","FORD"],["OPERATIONS",""]]
    header:

- module_name: SQL 连接查询使用
  module_case_name: 右连接
  name_id: dwrun_sql_027_right_join
  isInitialized: 0
  isCheckHeader: 0
  sqltype: plsql
  tb_name:
    tb_name1: emp
    tb_name2: dept
  exec_order:
    - sql
  exec_sql:
    # 右连接
    sql: f"select a.dname,b.ename from {tb_name2} a RIGHT JOIN {tb_name1} b ON a.deptno=b.deptno AND a.deptno=10;"
  expected_result:
    data: [['', 'SMITH'], ['', 'SMITH'], ['', 'SMITH'], ['', 'ALLEN'], ['', 'ALLEN'], ['', 'WARD'],['', 'JONES2'], ['', 'MARTIN'], ['', 'BLAKE'], ['ACCOUNTING', 'CLARK'], ['', 'SCOTT1'],['ACCOUNTING', 'KING'], ['', 'TURNER'], ['', 'JAMES'], ['', 'FORD'], ['ACCOUNTING', 'MILLER']]
    header:

- module_name: SQL 连接查询使用
  module_case_name: 自连接
  name_id: dwrun_sql_028_self_join
  isInitialized: 0
  isCheckHeader: 0
  sqltype: plsql
  tb_name:
    tb_name1: emp
    tb_name2: dept
  exec_order:
    - sql
  exec_sql:
    # 自连接
    sql: f"select worker.ename||'''s manager is '||manager.ename from {tb_name1} worker,{tb_name1} manager where worker.mgr=manager.empno;"
  expected_result:
    data: [['SMITHs manager is FORD'], ['SMITHs manager is FORD'], ['SMITHs manager is FORD'],['ALLENs manager is BLAKE'], ['ALLENs manager is BLAKE'], ['WARDs manager is BLAKE'],['JONES2s manager is KING'], ['MARTINs manager is BLAKE'], ['BLAKEs manager is KING'],['CLARKs manager is KING'], ['SCOTT1s manager is JONES2'], ['TURNERs manager is BLAKE'],['JAMESs manager is BLAKE'], ['MILLERs manager is CLARK']]
    header:

- module_name: SQL 连接查询使用
  module_case_name: 左连接
  name_id: dwrun_sql_029_left_join
  isInitialized: 0
  isCheckHeader: 0
  sqltype: plsql
  tb_name:
    tb_name1: emp
    tb_name2: dept
  exec_order:
    - sql
  exec_sql:
    # 左连接
    sql: f"select a.dname,b.ename from {tb_name2} a LEFT JOIN {tb_name1} b ON a.deptno=b.deptno AND a.deptno=10;"
  expected_result:
    data: [['ACCOUNTING', 'MILLER'], ['ACCOUNTING', 'KING'], ['ACCOUNTING', 'CLARK'],['RESEARCH', ''], ['SALES', ''], ['OPERATIONS', '']]
    header:

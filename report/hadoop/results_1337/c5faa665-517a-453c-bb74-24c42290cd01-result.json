{"name": "test_plsql_complex_function[列别名排序]", "status": "failed", "statusDetails": {"message": "AssertionError: 查询数据与默认查询数据不一致，请检查\nexpected_result: \n[['CLARK', '2450.5', 'ACCOUNTING', '10'], ['KING', '5000.6', 'ACCOUNTING', '10'], ['MILLER', '1300', 'ACCOUNTING', '10']]\ndata_dict: \n[['KING', '60007.2'], ['SCOTT1', '36000'], ['FORD', '36000'], ['JONES2', '35703.6'], ['BLAKE', '34200'], ['CLARK', '29406'], ['ALLEN', '19207.2'], ['ALLEN', '19200'], ['TURNER', '18000'], ['MILLER', '15600'], ['WARD', '15000'], ['MARTIN', '15000'], ['JAMES', '11400'], ['SMITH', '9606'], ['SMITH', '9600'], ['SMITH', '9600']]", "trace": "self = <cases.hadoop.plsql.testplsql.TestPLSqlManipulateData object at 0x000001B554D107C0>\ncases = {'exec_order': ['sql', 'check_header'], 'exec_sql': {'sql': 'f\"select ename,sal*12 年收入 from {tb_name1} order by 年收入 de...6', 'ACCOUNTING', '10'], ['MILLER', '1300', 'ACCOUNTING', '10']], 'header': ['ename', '年收入']}, 'isInitialized': 0, ...}\n\n    \n    @pytest.mark.sortquery\n    @allure.story(\"SQL 排序数据查询\")\n    @pytest.mark.parametrize(\"cases\", [item for item in parse_yaml(sort_query_data)],\n                             ids=[item[\"module_case_name\"] for item in parse_yaml(sort_query_data)])\n    def test_plsql_complex_function(self, cases):\n        \"\"\"\n        执行 SQL 排序数据查询 的测试用例，测试用例从sort_query_data读取\n>       \"\"\"\n\ncases\\hadoop\\plsql\\testplsql.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <cases.hadoop.plsql.testplsql.TestPLSqlManipulateData object at 0x000001B554D107C0>\ncases = {'exec_order': ['sql', 'check_header'], 'exec_sql': {'sql': 'f\"select ename,sal*12 年收入 from {tb_name1} order by 年收入 de...6', 'ACCOUNTING', '10'], ['MILLER', '1300', 'ACCOUNTING', '10']], 'header': ['ename', '年收入']}, 'isInitialized': 0, ...}\n\n    def run_case_all_steps(self, cases):\n        \"\"\"\n        运行所有步骤：\n        1、初始化表及数据\n        2、获取数据库连接id\n        3、获取对应的表、sql语句、语句执行顺序及预期结果\n        4、按顺序执行sql语句，将返回结果与预期结果做对比\n        cases: Dict,测试用例\n        \"\"\"\n        self.conn_id, sqltype, tb_name1, tb_name2, exec_order, exec_sql, expected_result, expected_header = self.run_case_steps(cases=cases)\n        with allure.step(\"按顺序执行sql语句，将返回结果与预期结果做对比\"):\n            for sql in exec_order:\n                # tb_name在eval语句中代入使用\n                if sql == \"check_header\":\n                    continue\n                print(f\"sql语句:{eval(exec_sql[sql])}\")\n                hp.sdc_dw.set_session_sqltype(dbName=self.db_name, connId=self.conn_id, sqltype=sqltype)\n                data_dict = \\\n                    hp.sdc_dw.dw_basic.dwrun_sqlParse_v1(dbName=self.db_name, sql=eval(exec_sql[sql]),\n                                                         connId=self.conn_id)[\"data\"]\n                data_header = hp.sdc_dw.dw_basic.dwrun_sqlParse_v1(dbName=self.db_name, sql=eval(exec_sql[sql]),\n                                                         connId=self.conn_id)[\"header\"]\n                print(f\"sql语句执行结果为:\\n{data_dict}\")\n>           assert expected_result == data_dict, f\"查询数据与默认查询数据不一致，请检查\\nexpected_result: \\n{expected_result}\\ndata_dict: \\n{data_dict}\\n\"\nE           AssertionError: 查询数据与默认查询数据不一致，请检查\nE           expected_result: \nE           [['CLARK', '2450.5', 'ACCOUNTING', '10'], ['KING', '5000.6', 'ACCOUNTING', '10'], ['MILLER', '1300', 'ACCOUNTING', '10']]\nE           data_dict: \nE           [['KING', '60007.2'], ['SCOTT1', '36000'], ['FORD', '36000'], ['JONES2', '35703.6'], ['BLAKE', '34200'], ['CLARK', '29406'], ['ALLEN', '19207.2'], ['ALLEN', '19200'], ['TURNER', '18000'], ['MILLER', '15600'], ['WARD', '15000'], ['MARTIN', '15000'], ['JAMES', '11400'], ['SMITH', '9606'], ['SMITH', '9600'], ['SMITH', '9600']]\n\ncases\\hadoop\\plsql\\testplsql.py:119: AssertionError"}, "description": "\n        执行 SQL 排序数据查询 的测试用例，测试用例从sort_query_data读取\n        ", "steps": [{"name": "初始化表及数据", "status": "passed", "start": 1609402226513, "stop": 1609402226514}, {"name": "获取数据库连接id", "status": "passed", "start": 1609402226514, "stop": 1609402226635}, {"name": "获取对应的表、sql语句、语句执行顺序及预期结果", "status": "passed", "start": 1609402226635, "stop": 1609402226635}, {"name": "按顺序执行sql语句，将返回结果与预期结果做对比", "status": "failed", "statusDetails": {"message": "AssertionError: 查询数据与默认查询数据不一致，请检查\nexpected_result: \n[['CLARK', '2450.5', 'ACCOUNTING', '10'], ['KING', '5000.6', 'ACCOUNTING', '10'], ['MILLER', '1300', 'ACCOUNTING', '10']]\ndata_dict: \n[['KING', '60007.2'], ['SCOTT1', '36000'], ['FORD', '36000'], ['JONES2', '35703.6'], ['BLAKE', '34200'], ['CLARK', '29406'], ['ALLEN', '19207.2'], ['ALLEN', '19200'], ['TURNER', '18000'], ['MILLER', '15600'], ['WARD', '15000'], ['MARTIN', '15000'], ['JAMES', '11400'], ['SMITH', '9606'], ['SMITH', '9600'], ['SMITH', '9600']]\n\n", "trace": "  File \"D:\\PythonProjects\\me_auto_test\\autoTest\\cases\\hadoop\\plsql\\testplsql.py\", line 119, in run_case_all_steps\n    assert expected_result == data_dict, f\"查询数据与默认查询数据不一致，请检查\\nexpected_result: \\n{expected_result}\\ndata_dict: \\n{data_dict}\\n\"\n"}, "start": 1609402226635, "stop": 1609402260220}], "parameters": [{"name": "cases", "value": "{'module_name': 'SQL 排序数据查询', 'module_case_name': '列别名排序', 'name_id': 'dwrun_sql_203', 'isInitialized': 0, 'sqltype': 'plsql', 'tb_name': {'tb_name1': 'emp', 'tb_name2': 'dept'}, 'exec_order': ['sql', 'check_header'], 'exec_sql': {'sql': 'f\"select ename,sal*12 年收入 from {tb_name1} order by 年收入 desc;\"'}, 'expected_result': {'data': [['CLARK', '2450.5', 'ACCOUNTING', '10'], ['KING', '5000.6', 'ACCOUNTING', '10'], ['MILLER', '1300', 'ACCOUNTING', '10']], 'header': ['ename', '年收入']}}"}], "start": 1609402226513, "stop": 1609402260220, "uuid": "9936cdf6-ef1b-462a-8558-306d5a3fa13c", "historyId": "6ab1a1db1c6f4aecc4fbefa1ee1ea7a5", "testCaseId": "cedec7e8a43eecbb1988999c1b605aa6", "fullName": "cases.hadoop.plsql.testplsql.TestPLSqlManipulateData#test_plsql_complex_function", "labels": [{"name": "story", "value": "SQL 排序数据查询"}, {"name": "tag", "value": "sortquery"}, {"name": "parentSuite", "value": "cases.hadoop.plsql"}, {"name": "suite", "value": "testplsql"}, {"name": "subSuite", "value": "TestPLSqlManipulateData"}, {"name": "host", "value": "SF-4359"}, {"name": "thread", "value": "26040-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "cases.hadoop.plsql.testplsql"}]}
{"name": "test_plsql_complex_function[列别名排序]", "status": "broken", "statusDetails": {"message": "KeyError: 'isCheckHeader'", "trace": "self = <cases.hadoop.plsql.testplsql.TestPLSqlManipulateData object at 0x0000021D53279D90>\ncases = {'exec_order': ['sql'], 'exec_sql': {'sql': 'f\"select ename,sal*12 年收入 from {tb_name1} order by 年收入 desc;\"'}, 'expecte...6', 'ACCOUNTING', '10'], ['MILLER', '1300', 'ACCOUNTING', '10']], 'header': ['ename', '年收入']}, 'isCheckHeader': 1, ...}\n\n    @pytest.mark.sortquery\n    @allure.story(\"SQL 排序数据查询\")\n    @pytest.mark.parametrize(\"cases\", [item for item in parse_yaml(sort_query_data)],\n                             ids=[item[\"module_case_name\"] for item in parse_yaml(sort_query_data)])\n    def test_plsql_complex_function(self, cases):\n        \"\"\"\n        执行 SQL 排序数据查询 的测试用例，测试用例从sort_query_data读取\n        \"\"\"\n>       self.run_case_all_steps(cases=cases)\n\ncases\\hadoop\\plsql\\testplsql.py:204: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncases\\hadoop\\plsql\\testplsql.py:106: in run_case_all_steps\n    self.conn_id, sqltype, tb_name1, tb_name2, exec_order, exec_sql, expected_result, isCheckHeader, expected_header = self.run_case_steps(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <cases.hadoop.plsql.testplsql.TestPLSqlManipulateData object at 0x0000021D53279D90>\ncases = {'exec_order': ['sql'], 'exec_sql': {'sql': 'f\"select ename,sal*12 年收入 from {tb_name1} order by 年收入 desc;\"'}, 'expecte...6', 'ACCOUNTING', '10'], ['MILLER', '1300', 'ACCOUNTING', '10']], 'header': ['ename', '年收入']}, 'isCheckHeader': 1, ...}\n\n    def run_case_steps(self, cases):\n        \"\"\"\n        运行前3步：\n        1、初始化表及数据\n        2、获取数据库连接id\n        3、获取对应的表、sql语句、语句执行顺序及预期结果\n        cases: Dict,测试用例\n        return:\n            self.conn_id: 数据库连接id\n            sqltype: plsql或sqlserver\n            tb_name: 测试用到的表名\n            exec_order: sql执行顺序\n            exec_sql: 执行的sql语句\n            expected_result: 预期结果\n        \"\"\"\n        with allure.step(\"初始化表及数据\"):\n            # 获取用例是否初始化表配置\n            isInitialized = cases[\"isInitialized\"]\n            # 调用初始化表方法\n            self.initialize_tables(isInitialized=isInitialized)\n        with allure.step(\"获取数据库连接id\"):\n            self.conn_id = hp.sdc_dw.get_dbName_connId(db_name=self.db_name)\n            print(f\"数据库{self.db_name}连接id为:{self.conn_id}\")\n        with allure.step(\"获取对应的表、sql语句、语句执行顺序及预期结果\"):\n            sqltype = cases[\"sqltype\"]\n            tb_name1 = cases[\"tb_name\"][\"tb_name1\"]  # emp表\n            tb_name2 = cases[\"tb_name\"][\"tb_name2\"]  # dept表\n            exec_order = cases[\"exec_order\"]\n            exec_sql = cases[\"exec_sql\"]\n            expected_result = cases[\"expected_result\"][\"data\"]\n>           isCheckHeader = cases[\"expected_result\"][\"isCheckHeader\"]\nE           KeyError: 'isCheckHeader'\n\ncases\\hadoop\\plsql\\testplsql.py:93: KeyError"}, "description": "\n        执行 SQL 排序数据查询 的测试用例，测试用例从sort_query_data读取\n        ", "steps": [{"name": "初始化表及数据", "status": "passed", "start": 1609404355671, "stop": 1609404355671}, {"name": "获取数据库连接id", "status": "passed", "start": 1609404355671, "stop": 1609404355782}, {"name": "获取对应的表、sql语句、语句执行顺序及预期结果", "status": "broken", "statusDetails": {"message": "KeyError: 'isCheckHeader'\n", "trace": "  File \"D:\\PythonProjects\\me_auto_test\\autoTest\\cases\\hadoop\\plsql\\testplsql.py\", line 93, in run_case_steps\n    isCheckHeader = cases[\"expected_result\"][\"isCheckHeader\"]\n"}, "start": 1609404355783, "stop": 1609404355783}], "parameters": [{"name": "cases", "value": "{'module_name': 'SQL 排序数据查询', 'module_case_name': '列别名排序', 'name_id': 'dwrun_sql_203', 'isInitialized': 0, 'isCheckHeader': 1, 'sqltype': 'plsql', 'tb_name': {'tb_name1': 'emp', 'tb_name2': 'dept'}, 'exec_order': ['sql'], 'exec_sql': {'sql': 'f\"select ename,sal*12 年收入 from {tb_name1} order by 年收入 desc;\"'}, 'expected_result': {'data': [['CLARK', '2450.5', 'ACCOUNTING', '10'], ['KING', '5000.6', 'ACCOUNTING', '10'], ['MILLER', '1300', 'ACCOUNTING', '10']], 'header': ['ename', '年收入']}}"}], "start": 1609404355670, "stop": 1609404355783, "uuid": "543867b5-d70f-4288-9ef1-24e0c10f3b81", "historyId": "6ab1a1db1c6f4aecc4fbefa1ee1ea7a5", "testCaseId": "cedec7e8a43eecbb1988999c1b605aa6", "fullName": "cases.hadoop.plsql.testplsql.TestPLSqlManipulateData#test_plsql_complex_function", "labels": [{"name": "story", "value": "SQL 排序数据查询"}, {"name": "tag", "value": "sortquery"}, {"name": "parentSuite", "value": "cases.hadoop.plsql"}, {"name": "suite", "value": "testplsql"}, {"name": "subSuite", "value": "TestPLSqlManipulateData"}, {"name": "host", "value": "SF-4359"}, {"name": "thread", "value": "23148-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "cases.hadoop.plsql.testplsql"}]}